created(1652645808.7615685).
assert(cursou('001','MAT155',14)).
assert(cursou('001','MAT154',80)).
assert(cursou('001','QUI125',94)).
assert(cursou('001','FIS122',69)).
assert(cursou('001','DCC119',54)).
assert(cursou('001','DCC120',78)).
assert(cursou('001','QUI126',100)).
assert(cursou('001','ICE001',16)).
assert(cursou('001','MAT156',27)).
assert(cursou('001','EST028',35)).
assert(cursou('001','FIS073',44)).
assert(cursou('001','FIS077',58)).
assert(cursou('001','DCC013',60)).
assert(cursou('001','DCC107',71)).
assert(cursou('001','QUI162',83)).
assert(cursou('001','DCC179',94)).
assert(cursou('001','MAT157',6)).
assert(cursou('001','DCC160',19)).
assert(cursou('001','MAT143',27)).
assert(cursou('001','DCC059',39)).
assert(cursou('001','DCC025',44)).
assert(cursou('001','DCC122',51)).
assert(cursou('001','MAT158',62)).
assert(cursou('001','MAT029',73)).
assert(cursou('001','DCC008',84)).
assert(cursou('001','DCC012',96)).
assert(cursou('001','DCC117',17)).
assert(cursou('001','DCC070',27)).
assert(cursou('001','DCC065',39)).
assert(cursou('001','DCC014',40)).
assert(cursou('001','EST029',59)).
assert(cursou('001','DCC060',68)).
assert(cursou('001','DCC061',72)).
assert(cursou('001','DCC062',81)).
assert(cursou('001','DCC163',99)).
assert(cursou('001','DCC063',9)).
assert(cursou('001','DCC174',1)).
assert(cursou('001','EADDCC044',14)).
assert(cursou('001','DCC042',52)).
assert(cursou('001','DCC064',63)).
assert(cursou('001','DCC123',74)).
assert(cursou('001','DCC055',95)).
assert(cursou('001','DCC001',76)).
assert(cursou('001','DCC075',77)).
assert(cursou('001','DCC110',68)).
assert(cursou('001','DCC045',72)).
assert(cursou('001','DCC019',53)).
assert(cursou('002','MAT155',60)).
assert(cursou('002','MAT154',98)).
assert(cursou('002','QUI125',76)).
assert(cursou('002','FIS122',92)).
assert(cursou('002','DCC119',87)).
assert(cursou('002','DCC120',67)).
assert(cursou('002','QUI126',89)).
assert(cursou('002','ICE001',90)).
assert(cursou('002','MAT156',65)).
assert(cursou('002','EST028',83)).
assert(cursou('002','FIS073',98)).
assert(cursou('002','FIS077',99)).
assert(cursou('002','DCC013',100)).
assert(cursou('002','DCC107',80)).
assert(cursou('003','DCC123',87)).
assert(cursou('003','DCC055',54)).
assert(cursou('003','DCC001',89)).
assert(cursou('003','DCC075',90)).
assert(cursou('003','DCC110',54)).
assert(cursou('003','DCC045',32)).
assert(cursou('003','DCC019',89)).
assert(cursou('003','DCC013',90)).
assert(cursou('003','DCC107',78)).
assert(cursou('003','QUI162',98)).
assert(cursou('003','DCC179',93)).
assert(cursou('003','MAT157',60)).
assert(cursou('003','DCC160',78)).
assert(cursou('003','MAT143',90)).
assert(cursou('003','DCC059',93)).
assert(cursou('003','DCC025',92)).
assert(cursou('003','DCC122',85)).
assert(cursou('003','MAT158',87)).
assert(cursou('003','MAT029',90)).
assert(cursou('003','DCC008',77)).
assert(cursou('003','DCC012',88)).
assert(cursou('003','DCC117',99)).
assert(cursou('004','MAT157',60)).
assert(cursou('004','DCC160',91)).
assert(cursou('004','MAT143',72)).
assert(cursou('004','DCC059',93)).
assert(cursou('004','DCC025',44)).
assert(cursou('004','DCC122',15)).
assert(cursou('004','MAT158',26)).
assert(cursou('004','MAT029',37)).
assert(cursou('004','DCC008',48)).
assert(cursou('004','DCC012',69)).
assert(cursou('004','DCC117',71)).
assert(cursou('004','DCC070',72)).
assert(cursou('004','DCC065',93)).
assert(cursou('004','DCC014',4)).
assert(cursou('004','EST029',94)).
assert(cursou('004','DCC060',86)).
assert(cursou('004','DCC061',27)).
assert(cursou('004','DCC062',18)).
assert(cursou('004','DCC163',99)).
assert(cursou('004','DCC063',9)).
assert(cursou('004','DCC174',10)).
assert(cursou('006','DCC012',69)).
assert(cursou('006','DCC117',71)).
assert(cursou('006','DCC070',72)).
assert(cursou('006','DCC065',93)).
assert(cursou('006','DCC014',4)).
assert(cursou('006','EST029',94)).
assert(cursou('006','DCC060',86)).
assert(cursou('006','DCC061',27)).
assert(cursou('006','DCC062',18)).
assert(cursou('006','DCC163',99)).
assert(cursou('006','DCC063',9)).
assert(cursou('006','DCC174',10)).
assert(cursou('007','MAT154',80)).
assert(cursou('007','QUI125',94)).
assert(cursou('007','FIS122',69)).
assert(cursou('007','DCC119',54)).
assert(cursou('007','DCC120',78)).
assert(cursou('007','QUI126',100)).
assert(cursou('007','ICE001',16)).
assert(cursou('007','MAT156',27)).
assert(cursou('007','EST028',35)).
assert(cursou('007','FIS073',44)).
assert(cursou('007','FIS077',58)).
assert(cursou('007','DCC013',60)).
assert(cursou('007','DCC107',71)).
assert(cursou('007','QUI162',83)).
assert(cursou('007','DCC179',94)).
assert(cursou('007','MAT157',6)).
assert(cursou('007','DCC160',19)).
assert(cursou('007','MAT143',27)).
assert(cursou('007','DCC059',39)).
assert(cursou('007','DCC025',44)).
assert(cursou('007','DCC122',51)).
assert(cursou('007','MAT158',62)).
assert(cursou('007','MAT029',73)).
assert(cursou('007','DCC008',84)).
assert(cursou('007','DCC012',96)).
assert(cursou('008','DCC133',67)).
assert(cursou('008','DCC121',87)).
assert(cursou('008','CAD076',97)).
assert(cursou('008','EADDCC049',96)).
assert(cursou('008','FIN001',65)).
assert(cursou('008','DCC146',78)).
assert(cursou('008','DCC192',99)).
assert(cursou('008','DCC193',100)).
assert(cursou('008','DCC049',67)).
assert(cursou('008','DCC154',62)).
assert(cursou('008','DCC168',87)).
assert(cursou('008','DCC078',98)).
assert(cursou('008','DCC077',78)).
assert(cursou('008','DCC145',81)).
assert(cursou('008','DCC196',91)).
assert(cursou('008','DCC166',85)).
assert(cursou('008','DCC165',78)).
assert(cursou('008','DCC194',73)).
assert(cursou('009','DCC133',78)).
assert(cursou('009','DCC121',90)).
assert(cursou('009','CAD076',87)).
assert(cursou('009','EADDCC049',72)).
assert(cursou('009','FIN001',60)).
assert(cursou('009','DCC146',99)).
assert(cursou('009','DCC192',44)).
assert(cursou('009','DCC193',10)).
assert(cursou('009','DCC049',83)).
assert(cursou('009','DCC154',84)).
assert(cursou('009','DCC168',85)).
assert(cursou('009','DCC078',86)).
assert(cursou('009','DCC077',87)).
assert(cursou('009','DCC145',88)).
assert(cursou('009','DCC196',90)).
assert(cursou('009','DCC166',99)).
assert(cursou('009','DCC165',61)).
assert(cursou('009','DCC194',62)).
assert(cursou('009','EADDCC044',63)).
assert(cursou('009','DCC042',64)).
assert(cursou('009','DCC064',65)).
assert(cursou('009','DCC123',66)).
assert(cursou('009','DCC055',67)).
assert(cursou('009','DCC001',68)).
assert(cursou('009','DCC075',89)).
assert(cursou('009','DCC110',90)).
assert(cursou('009','DCC045',32)).
assert(cursou('009','DCC019',0)).
